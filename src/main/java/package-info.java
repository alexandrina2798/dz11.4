/*
 * Singleton:   не применен, не нашла в проекте вариантов добавления для упрощения кода
 * Factory:     применена абстрактная фабрика в AppearanceGenerator,
 *  чтобы уменьшить количество кода внутри AppearanceGenerator.
 * При добавлении нового шаблона внешности будет создаваться новый шаблон в папке templates, при этом
 * меньше правок будет внутри AppearanceGenerator
 * Builder:     можно было применить, например, в AppearanceGenerator для пошагового добавления новых параметров
 * внешности. Не применен, так как при использовании билдера, в случае расширения требований к разнообразию
 * внешности, пришлось бы переделывать логику, построенную в AppearanceGenerator. Стремилась это минимизировать
 * Adapter:     не применен - не нашла применения переводчику в проекте
 * Bridge:      не применен - не нашла применения
 * Facade:      применен в AppearanceGenerator, основную логику спрятали внутрь шаблонов
 * DTO:         применен для получения ФИО, чтобы расширить возможности работы с ФИО далее
 * при добавлении требований по выводу различных комбинаций ФИО будет проще добавлять функционал
 * Шаблон:      применены для генерации внешности. Изначально выбор внешности был сильно ограничен
 * и имелась прямая зависимость между цветом глаз и параметрами волос. Добавление шаблонов внешности
 * поможет добавить вариативность и уменьшит правки логики внутри AppearanceGenerator.
 * Пояснение: ранее наличие серых глаз обязывало сгенерировать длинные розовые или зеленые волосы.
 * С шаблонами обладатель серых глаз сможет иметь прическу, какую захочет, нужно только добавить шаблон
 */